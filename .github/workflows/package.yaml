name: "Package"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:
env:
  DEFAULT_NODE_VERSION: 22.x
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true
jobs:
  Definitions:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      DEFAULT_NODE_VERSION: ${{ env.DEFAULT_NODE_VERSION }}
    steps:
      - run: echo "Preparing definitions..."

  check-npm-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        name: Setup Node.js
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
          cache: "npm"

      - name: Instalar dependências do Node (sem instalar pacotes)
        run: npm ci

      - name: Obter versão do package.json
        id: version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Verificar se a versão já existe no NPM
        run: |
          echo "Verificando se a versão $VERSION já está publicada..."
          if npm view $(node -p "require('./package.json').name")@$VERSION version > /dev/null 2>&1; then
            echo "❌ A versão $VERSION já existe no NPM. Interrompendo pipeline."
            exit 1
          else
            echo "✅ Versão $VERSION ainda não publicada."
          fi
  Test:
    needs:  [Definitions, check-npm-version]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      checks: write
    name: Testes (os ${{matrix.os}})(node v${{ matrix.node-version }})
    strategy:
      matrix:
        os: [
            "ubuntu-latest",
            "macos-latest",
            "windows-latest"
        ]
        node-version: [
            "16.x",
            # "20.x",
            # "21.x",
            "${{ needs.Definitions.outputs.DEFAULT_NODE_VERSION }}",
            "23.x"
          ]
    steps:
      - run: echo token ${{github.token}}
      - uses: actions/checkout@v4
        name: Checkout
      - uses: actions/setup-node@v4
        name: Setup Node.js ${{ matrix.node-version }}
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Run npm ci
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Test Report
        uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5
        if: success() || failure()
        with:
          name: Testes (node v${{ matrix.node-version }}) - Resultados
          path: reports/junit.xml
          reporter: jest-junit
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@1e68e06f1dbfde0e4cefc87efeba9e4643565303
        if: success() || failure()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          fail_ci_if_error: true
          name: code-coverage-report-node-${{matrix.node-version}}
      - name: Upload test results to Codecov
        if: success() || failure()
        uses: codecov/test-results-action@4e79e65778be1cecd5df25e14af1eafb6df80ea9
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: reports/junit.xml

  Build:
    needs: [Test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: actions/setup-node@v4
        name: Setup Node.js
        with:
          node-version: ${{ needs.Definitions.outputs.DEFAULT_NODE_VERSION }}
          cache: "npm"
      - name: Run npm ci
        run: npm ci
      - name: Run build
        run: npm run build
      - name: Run npm pack
        run: npm pack
      - name: Extract package
        run: tar -xvf *.tgz
      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: "./package"

  Deploy:
    needs: [Build, Definitions]
    runs-on: ubuntu-latest
    environment: prd
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: package
      - uses: actions/setup-node@v4
        name: Setup Node.js
        with:
          node-version: ${{ needs.Definitions.outputs.DEFAULT_NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"
      - run: find .
        name: List package files
      - name: Run npm publish
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
